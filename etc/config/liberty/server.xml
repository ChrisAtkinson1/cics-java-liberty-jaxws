<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<server description="CICS Liberty sample configuration">
    <!-- Enable features -->
    <featureManager>
        <feature>cicsts:core-1.0</feature>
        <feature>cicsts:defaultApp-1.0</feature>
        <feature>jaxws-2.2</feature>
        <feature>transportSecurity-1.0</feature>
    </featureManager>
    
    <!-- Default HTTP End Point                         -->
    <httpEndpoint host="defaultHttpEndpoint" httpPort="9080" httpsPort="9081" id="defaultHttpEndpoint"/>
    
    <!-- Increase server security with recommended HTTP headers -->
    <headers>
        <setIfMissing>Content-Security-Policy</setIfMissing>
        <setIfMissing>Expect-CT</setIfMissing>
        <setIfMissing>Referrer-Policy</setIfMissing>
        <setIfMissing>X-Content-Type-Options</setIfMissing>
        <setIfMissing>X-Frame-Options</setIfMissing>
        <setIfMissing>X-XSS-Protection</setIfMissing>
    </headers>
    
    <!-- Provide more secure cookie defaults -->
    <httpSession cookieHttpOnly="true" cookieSecure="true"/>
    
    <!-- Provide more secure application defaults -->
    <webAppSecurity httpOnlyCookies="true" ssoRequiresSSL="true"/>
    
    <!-- Add Strict Transport Security (HSTS) -->
    <webContainer addstricttransportsecurityheader="max-age=31536000;includeSubDomains"/>
    
    <!-- Add a more secure session timeout (default is 120 mins) -->
    <ltpa expiration="5m"/>
    
    <!-- The following configuration controls how often server.xml
         is scanned for updates. The default is every 500ms which may
         cause excessive I/O and CPU cost on z/OS.
         The values shown below reduce the overhead while still
         providing a relatively timely detection of new applications
         that have been installed/removed via a CICS Bundle
         (WAR bundlepart). If you use CICS bundles to install Web
         Applications (WAR files) do not use the "disabled" 
         updateTrigger.
    -->
    <config monitorInterval="5s" updateTrigger="polled"/>
    
    <!-- The application start timeout specifies the maximum
         amount of time the server waits for applications
         to start before the server becomes available.
         If there are lots of applications installed and startup
         takes too long you may need to increase this value.
    -->
    <applicationManager startTimeout="60s"/>
    
    <!-- Further scanning is performed to detect application updates or
         addition/removal of applications to the dropins directory. If
         you are using CICS Bundles as the vehicle for Application 
         deployment you should disable the dropins directory as shown.
         Further I/O and CPU reduction can be achieved by disabling
         the application scan. To effect changes to your applications
         while the server is still running, you should disable and
         re-enable the CICS bundle that contains the Web application.
         The pollingRate is only applicable when the updateTrigger is
         set to the 'polled' value.
         Consult the WebSphere Application Server Liberty Profile
         documentation for further information on these parameters.
    -->
    <applicationMonitor dropins="dropins" dropinsEnabled="false" pollingRate="5s" updateTrigger="disabled"/>
    
    <!-- By default, the cdi-1.2 feature scans all application archives.
         The cdi-1.2 feature can increase startup time substantially 
         and have the most effect on larger applications. Implicit 
         archive scanning for annotations can be disabled by setting 
         enableImplicitBeanArchives value to false. This setting skips
         the scanning of archives unless they contain a beans.xml.
         Even if not explicitly coded, the cdi-1.2 feature might be 
         enabled through other features, such as the javaee-7.0 
         convenience feature.
    -->
     <cdi enableImplicitBeanArchives="false"/>
     <keyStore id="defaultKeyStore" password="defaultPassword"/>
    <ssl clientAuthenticationSupported="true" id="defaultSSLConfig" keyStoreRef="defaultKeyStore" sslProtocol="TLSv1.2"/>
    <executor coreThreads="8" id="allowCICSconfigure" maxThreads="15"/>
</server>